apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"},"creationTimestamp":null,"generation":1,"labels":{"app":"inventory"},"name":"inventory","namespace":"myproject"},"spec":{"replicas":1,"selector":{"deploymentconfig":"inventory"},"strategy":{"activeDeadlineSeconds":21600,"resources":{},"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","pre":{"execNewPod":{"command":["/opt/app-root/bin/python","manage.py","db","upgrade"],"containerName":"inventory"},"failurePolicy":"Abort"},"timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"inventory","deploymentconfig":"inventory"}},"spec":{"containers":[{"command":["gunicorn","--log-level=debug","-b","0.0.0.0:8080","run"],"env":[{"name":"INVENTORY_DB_HOST","value":"postgresql:5432"},{"name":"INVENTORY_DB_USER","value":"insights"},{"name":"INVENTORY_DB_PASS","value":"insights"},{"name":"INVENTORY_DB_NAME","value":"insights"},{"name":"APP_NAME","value":"inventory"},{"name":"PATH_PREFIX","value":"/r/insights/platform"}],"image":"172.30.1.1:5000/myproject/inventory@sha256:35e7f09eede6f86ead8d2dd296263f26edbd356e2a2652402b70738b29e79f48","imagePullPolicy":"Always","name":"inventory","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}},"test":false,"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["inventory"],"from":{"kind":"ImageStreamTag","name":"inventory:latest","namespace":"myproject"}},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{"availableReplicas":0,"latestVersion":0,"observedGeneration":0,"replicas":0,"unavailableReplicas":0,"updatedReplicas":0}}
    openshift.io/generated-by: OpenShiftWebConsole
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  creationTimestamp: null
  generation: 1
  labels:
    app: inventory
  name: inventory
spec:
  replicas: 1
  selector:
    deploymentconfig: inventory
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      pre:
        execNewPod:
          command:
          - /opt/app-root/bin/python
          - manage.py
          - db
          - upgrade
          containerName: inventory
          volumes:
          - prometheus-volume
        failurePolicy: Abort
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: inventory
        deploymentconfig: inventory
    spec:
      containers:
      - image: 172.30.1.1:5000/myproject/nginx-ex@sha256:d12ad4afbd1a59e4edebb565ad03fe2cf58dc58933901dbdeed1af9d1eb5a719
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/app-root/etc/nginx.default.d/
          name: inventory-nginx-config-map-volume
        - mountPath: /tmp/inventory/gunicorn
          name: gunicorn-socket-volume
      - command:
        - gunicorn
        - --log-level=debug
        - -c
        - /etc/inventory/conf/gunicorn.conf.py
        - -b
        - unix:/tmp/inventory/gunicorn/sock
        - run
        env:
        - name: INVENTORY_DB_NAME
          value: insights
        - name: APP_NAME
          value: inventory
        - name: PATH_PREFIX
          value: /r/insights/platform
        - name: prometheus_multiproc_dir
          value: /tmp/inventory/prometheus
        - name: INVENTORY_DB_HOST
          valueFrom:
            secretKeyRef:
              key: hostname
              name: inventory-db-secret
        - name: INVENTORY_DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: inventory-db-secret
        - name: INVENTORY_DB_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: inventory-db-secret
        image: 172.30.1.1:5000/myproject/inventory@sha256:5f462c9933775fa7b99d9a92aacb19cee8f8327d7b38074bf2d7b298cf9d4786
        imagePullPolicy: Always
        name: inventory
        ports:
        - containerPort: 8000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/inventory/conf
          name: inventory-gunicorn-config-map-volume
        - mountPath: /tmp/inventory/prometheus
          name: prometheus-volume
        - mountPath: /tmp/inventory/gunicorn
          name: gunicorn-socket-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: inventory-gunicorn-config
        name: inventory-gunicorn-config-map-volume
      - configMap:
          defaultMode: 420
          name: inventory-nginx-config
        name: inventory-nginx-config-map-volume
      - emptyDir: {}
        name: prometheus-volume
      - emptyDir: {}
        name: gunicorn-socket-volume
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - inventory
      from:
        kind: ImageStreamTag
        name: inventory:latest
        namespace: myproject
    type: ImageChange
  - type: ConfigChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
